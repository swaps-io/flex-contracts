import { expect } from 'chai';

import { calcFlexMultiBranch, calcFlexTree } from '../../@swaps-io/flex-sdk';

describe('flex-sdk/calcFlexMultiBranch', function () {
  it('Should not calc multi branch of 2 mismatching leaves of tree with 2 leaves', function () {
    expect(() => {
      calcFlexMultiBranch({
        tree: calcFlexTree({
          leaves: [
            '0x1111111111111111111111111111111111111111111111111111111111111111',
            '0x2222222222222222222222222222222222222222222222222222222222222222',
          ],
        }),
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
        ],
      });
    }).throws(Error);
  });

  it('Should calc multi branch of 2 leaves of tree with 2 leaves', function () {
    const branch = calcFlexMultiBranch({
      tree: calcFlexTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
        ],
      }),
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
    });
    expect(branch).deep.equal({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
      branch: [],
      flags: [
        true,
      ],
    });
  });

  it('Should calc multi branch of 2 leaves of tree with 3 leaves', function () {
    const branch = calcFlexMultiBranch({
      tree: calcFlexTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
        ],
      }),
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
    });
    expect(branch).deep.equal({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
      branch: [
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
      flags: [
        true,
        false,
      ],
    });
  });

  it('Should calc multi branch of 3 leaves of tree with 3 leaves', function () {
    const branch = calcFlexMultiBranch({
      tree: calcFlexTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
        ],
      }),
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
    });
    expect(branch).deep.equal({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
      branch: [],
      flags: [
        true,
        true,
      ],
    });
  });

  it('Should calc multi branch of 2 leaves of tree with 7 leaves', function () {
    const branch = calcFlexMultiBranch({
      tree: calcFlexTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
          '0x4444444444444444444444444444444444444444444444444444444444444444',
          '0x5555555555555555555555555555555555555555555555555555555555555555',
          '0x6666666666666666666666666666666666666666666666666666666666666666',
          '0x7777777777777777777777777777777777777777777777777777777777777777',
        ],
      }),
      leaves: [
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x1111111111111111111111111111111111111111111111111111111111111111',
      ],
    });
    expect(branch).deep.equal({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
      branch: [
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
        '0x7777777777777777777777777777777777777777777777777777777777777777',
        '0xee673dead18e0bd840c75d973babf38f2a3527cf5b86621d5ed7a30b62d247c7',
      ],
      flags: [
        false,
        false,
        false,
        false,
        true,
      ],
    });
  });

  it('Should calc multi branch of 3 leaves of tree with 7 leaves', function () {
    const branch = calcFlexMultiBranch({
      tree: calcFlexTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
          '0x4444444444444444444444444444444444444444444444444444444444444444',
          '0x5555555555555555555555555555555555555555555555555555555555555555',
          '0x6666666666666666666666666666666666666666666666666666666666666666',
          '0x7777777777777777777777777777777777777777777777777777777777777777',
        ],
      }),
      leaves: [
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x5555555555555555555555555555555555555555555555555555555555555555',
      ],
    });
    expect(branch).deep.equal({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x5555555555555555555555555555555555555555555555555555555555555555',
      ],
      branch: [
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
        '0x6666666666666666666666666666666666666666666666666666666666666666',
        '0x7777777777777777777777777777777777777777777777777777777777777777',
      ],
      flags: [
        false,
        false,
        false,
        false,
        true,
        true,
      ],
    });
  });
});
