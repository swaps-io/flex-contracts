import { expect } from 'chai';

import { calcFlexTree, FlexError } from '../../@swaps-io/flex-sdk';

describe('flex-sdk/calcFlexTree', function () {
  it('Should not calc tree from 0 leaves', function () {
    expect(() => {
      calcFlexTree({
        leaves: [],
      });
    }).throws(FlexError);
  });

  it('Should calc tree from 1 leaf', function () {
    const tree = calcFlexTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
      ],
    });
    expect(tree).equal(
      '0x1111111111111111111111111111111111111111111111111111111111111111',
    );
  });

  it('Should calc tree from 2 leaves', function () {
    const tree = calcFlexTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
    });
    expect(tree).deep.equal([
      '0x1111111111111111111111111111111111111111111111111111111111111111',
      '0x2222222222222222222222222222222222222222222222222222222222222222',
    ]);
  });

  it('Should calc tree from 3 leaves', function () {
    const tree = calcFlexTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
    });
    expect(tree).deep.equal([
      [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
      '0x3333333333333333333333333333333333333333333333333333333333333333',
    ]);
  });

  it('Should calc tree from 4 leaves', function () {
    const tree = calcFlexTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
      ],
    });
    expect(tree).deep.equal([
      [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
      [
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
      ],
    ]);
  });

  it('Should calc tree from 5 leaves', function () {
    const tree = calcFlexTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
        '0x5555555555555555555555555555555555555555555555555555555555555555',
      ],
    });
    expect(tree).deep.equal([
      [
        [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
        ],
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
      [
        '0x4444444444444444444444444444444444444444444444444444444444444444',
        '0x5555555555555555555555555555555555555555555555555555555555555555',
      ],
    ]);
  });

  it('Should calc tree from 11 leaves', function () {
    const tree = calcFlexTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
        '0x5555555555555555555555555555555555555555555555555555555555555555',
        '0x6666666666666666666666666666666666666666666666666666666666666666',
        '0x7777777777777777777777777777777777777777777777777777777777777777',
        '0x8888888888888888888888888888888888888888888888888888888888888888',
        '0x9999999999999999999999999999999999999999999999999999999999999999',
        '0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
        '0xBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB',
      ],
    });
    expect(tree).deep.equal([
      [ // 1, 2, 3, 4, 5, 6
        [ // 1, 2, 3
          [ // 1, 2
            '0x1111111111111111111111111111111111111111111111111111111111111111',
            '0x2222222222222222222222222222222222222222222222222222222222222222',
          ],
          '0x3333333333333333333333333333333333333333333333333333333333333333',
        ],
        [ // 4, 5, 6
          [ // 4, 5
            '0x4444444444444444444444444444444444444444444444444444444444444444',
            '0x5555555555555555555555555555555555555555555555555555555555555555',
          ],
          '0x6666666666666666666666666666666666666666666666666666666666666666',
        ],
      ],
      [ // 7, 8, 9, 10, 11
        [ // 7, 8, 9
          [ // 7, 8
            '0x7777777777777777777777777777777777777777777777777777777777777777',
            '0x8888888888888888888888888888888888888888888888888888888888888888',
          ],
          '0x9999999999999999999999999999999999999999999999999999999999999999',
        ],
        [ // 10, 11
          '0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
          '0xBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB',
        ],
      ],
    ]);
  });
});
